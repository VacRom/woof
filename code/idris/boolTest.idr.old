-- Note that boolTest.idr is already an existing file. I will add test
  -- cases for the homework at the end of this file.

module boolTest

import bool
import pair

-- Is this necessary?
data boolTest = bool

-- Bool true
b1: bool
b1 = true

-- Bool true
b2: bool
b2 = true

-- Bool false
b3: bool
b3 = false

-- Bool not true
b4: bool
b4 = not true

-- Bool not b1
b5: bool
b5 = not b1

-- Bool not (not b5)
b6: bool
b6 = not (not b5)

-- Test cases.
tt: pair bool bool
tt = (mkPair true true)

tf: pair bool bool
tf = (mkPair true false)

--Since our functions do not care for the order of the pair, tf and ft
  --will return the same result.
ft: pair bool bool
ft = (mkPair false true)

ff: pair bool bool
ff = (mkPair false false)

-- andp tt = t
-- andp tf = f
-- andp ff = f

-- orp tt = t
-- orp tf = t
-- orp ff = f

-- nandp tt = f
-- nandp tf = t
-- nandp ff = t

-- xorp tt = f
-- xorp tf = t
-- xorp ff = f

-- EXAM 
pand_t_t: bool
pand_t_t = pand true true
-- expect true

pand_t_f: bool
pand_t_f = pand true false
-- expect false

pand_f_t: bool
pand_f_t = pand false true
-- expect false

pand_f_f: bool
pand_f_f = pand false false
-- expect false

por_t_t: bool
por_t_t = por true true
-- expect true

por_t_f: bool
por_t_f = por true false
-- expect true

por_f_t: bool
por_f_t = por false true
-- expect true

por_f_f: bool
por_f_f = por false false
-- expect false

pxor_t_t: bool
pxor_t_t = pxor true true
-- expect false

pxor_t_f: bool
pxor_t_f = pxor true false
-- expect true

pxor_f_t: bool
pxor_f_t = pxor false true
-- expect true

pxor_f_f: bool
pxor_f_f = pxor false false
-- expect false

pnand_t_t: bool
pnand_t_t = pnand true true
-- expect false

pnand_t_f: bool
pnand_t_f = pnand true false
-- expect false

pnand_f_t: bool
pnand_f_t = pnand false true
-- expect false

pnand_f_f: bool
pnand_f_f = pnand false false
-- expect true

-- Note: Could we have made typing out the tests faster by the logic that, function_t_f = function_f_t?
